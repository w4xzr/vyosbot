name: VyOS v1.4 Rolling Release

on:
  workflow_dispatch:
      
  schedule:
    - cron: 0 0 * * *

env:
  GIT_CLONE_URL: https://github.com/vyos/vyos-build
  DEBIAN_MIRROR: http://ftp.us.debian.org/debian/
  BRANCH: current
  BUILD_ARCH: amd64
  BUILD_BY: ${{ secrets.EMAIL }}
  BUILD_TYPE: release
  BUILD_COMMENT: "Built By W4XZR."
  BUILD_AZURE: true
  BUILD_AWS: true
  BUILD_XCP: true
  PACKER_JSON_PATCH: false
  PACKER_JSON_PATCH_FILE: packer.json_wait-time_equuleus.patch
  VMWARE_OVFTOOL: VMware-ovftool-4.4.1-16812187-lin.x86_64.bundle
  VMWARE_PRIVATE_KEY: private_key_for_signing_vmware_image.pem
  ARTIFACTS_DIR: artifacts
  WORKING_DIR: vyos-build
  STATUS_SUCCESS: "::set-output name=status::success"

jobs:
  createid:
    runs-on: ubuntu-latest
    
    outputs:
      BUILD: ${{ steps.step1.outputs.ver }}
      
    steps:  
      - name: Set env
        run: echo "BUILD_VERSION=sagitta-$(date +%Y%m%d%H%M)" >> $GITHUB_ENV 
        
      - id: step1
        run: echo "ver=$BUILD_VERSION" >> "$GITHUB_OUTPUT"
        
  build:
    needs: createid
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: ['iso', 'xcpng', 'aws-iso', 'azure-iso']
        inc_nat64: ['', '--custom-package tayga']
    
    outputs:
      BUILD: ${{ steps.step1.outputs.ver }}

    container:
      image: vyos/vyos-build:current
      options: --workdir /vyos --privileged

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Clone Source Code
        run: |
          git clone -b $BRANCH --single-branch $GIT_CLONE_URL $WORKING_DIR
          cd $WORKING_DIR
          mkdir -p ./$ARTIFACTS_DIR
          
      - name: Set env
        run: echo "BUILD_VERSION=${{needs.createid.outputs.BUILD}}" >> $GITHUB_ENV 
         
      - name: Build ISO Image
        id: iso
        working-directory: ./${{ env.WORKING_DIR }}
        shell: bash
        run: |
         sudo make clean
         
         sudo ./build-vyos-image ${{ matrix.build_type }} --architecture $BUILD_ARCH --build-by $BUILD_BY --build-type $BUILD_TYPE --version $BUILD_VERSION --build-comment "$BUILD_COMMENT" --custom-package mc --custom-package iptraf-ng --custom-package nano --custom-package bat --custom-package git ${{ matrix.inc_nat64 }}
         ls ./build/
         if [ '${{ matrix.build_type }}' == 'iso' ]; then
           if [ '${{ matrix.inc_nat64  }}' == '--custom-package tayga' ]; then
             cp -f ./build/vyos-$BUILD_VERSION-$BUILD_ARCH.iso ./$ARTIFACTS_DIR/vyos-$BUILD_VERSION-$BUILD_ARCH.nat64.iso
           else
             cp -f ./build/vyos-$BUILD_VERSION-$BUILD_ARCH.iso ./$ARTIFACTS_DIR/vyos-$BUILD_VERSION-$BUILD_ARCH.iso
             fi
         fi
         
         if [ '${{ matrix.build_type }}' == 'aws-iso' ]; then
           if [ '${{ matrix.inc_nat64  }}' == '--custom-package tayga' ]; then
             cp -f ./build/vyos-$BUILD_VERSION-$BUILD_ARCH.iso ./$ARTIFACTS_DIR/vyos-$BUILD_VERSION-$BUILD_ARCH.nat64.aws.iso
           else
             cp -f ./build/vyos-$BUILD_VERSION-$BUILD_ARCH.iso ./$ARTIFACTS_DIR/vyos-$BUILD_VERSION-$BUILD_ARCH.aws.iso
             fi
         fi
         
          if [ '${{ matrix.build_type }}' == 'xcpng' ]; then
           if [ '${{ matrix.inc_nat64  }}' == '--custom-package tayga' ]; then
             cp -f ./build/vyos-$BUILD_VERSION-$BUILD_ARCH.iso ./$ARTIFACTS_DIR/vyos-$BUILD_VERSION-$BUILD_ARCH.nat64.xcpng.iso
           else
             cp -f ./build/vyos-$BUILD_VERSION-$BUILD_ARCH.iso ./$ARTIFACTS_DIR/vyos-$BUILD_VERSION-$BUILD_ARCH.xcpng.iso
             fi
         fi
         
         if [ '${{ matrix.build_type }}' == 'azure-iso' ]; then
           if [ '${{ matrix.inc_nat64  }}' == '--custom-package tayga' ]; then
             cp -f ./build/vyos-$BUILD_VERSION-$BUILD_ARCH.iso ./$ARTIFACTS_DIR/vyos-$BUILD_VERSION-$BUILD_ARCH.nat64.azure.iso
           else
             cp -f ./build/vyos-$BUILD_VERSION-$BUILD_ARCH.iso ./$ARTIFACTS_DIR/vyos-$BUILD_VERSION-$BUILD_ARCH.azure.iso
             fi
         fi
         
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: vyos-${{ env.BUILD_VERSION }}-${{ env.BUILD_ARCH }}-images
          path: ${{ env.WORKING_DIR }}/${{ env.ARTIFACTS_DIR }}       

  release:
    needs: [build, createid]
    runs-on: ubuntu-latest

    steps:
          
      - name: Set env
        run: echo "BUILD_VERSION=${{needs.createid.outputs.BUILD}}" >> $GITHUB_ENV 
        
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:
          name: vyos-${{ env.BUILD_VERSION }}-${{ env.BUILD_ARCH }}-images
          
      - name: SHA256sum
        run: |
         sha256sum vyos-$BUILD_VERSION-$BUILD_ARCH.iso >> vyos-$BUILD_VERSION-$BUILD_ARCH.sha256
         sha256sum vyos-$BUILD_VERSION-$BUILD_ARCH.aws.iso >> vyos-$BUILD_VERSION-$BUILD_ARCH.sha256
         sha256sum vyos-$BUILD_VERSION-$BUILD_ARCH.azure.iso >> vyos-$BUILD_VERSION-$BUILD_ARCH.sha256
         sha256sum vyos-$BUILD_VERSION-$BUILD_ARCH.xcpng.iso >> vyos-$BUILD_VERSION-$BUILD_ARCH.sha256
         sha256sum vyos-$BUILD_VERSION-$BUILD_ARCH.nat64.iso >> vyos-$BUILD_VERSION-$BUILD_ARCH.sha256
         sha256sum vyos-$BUILD_VERSION-$BUILD_ARCH.nat64.aws.iso >> vyos-$BUILD_VERSION-$BUILD_ARCH.sha256
         sha256sum vyos-$BUILD_VERSION-$BUILD_ARCH.nat64.azure.iso >> vyos-$BUILD_VERSION-$BUILD_ARCH.sha256
         sha256sum vyos-$BUILD_VERSION-$BUILD_ARCH.nat64.xcpng.iso >> vyos-$BUILD_VERSION-$BUILD_ARCH.sha256
        
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: sagitta
          name: VyOS 1.4 Rolling Release
          body: VyOS sagitta Branch
          draft: false
          prerelease: true
          files: |
            vyos-${{ env.BUILD_VERSION }}-${{ env.BUILD_ARCH }}.iso
            vyos-${{ env.BUILD_VERSION }}-${{ env.BUILD_ARCH }}.xcpng.iso
            vyos-${{ env.BUILD_VERSION }}-${{ env.BUILD_ARCH }}.aws.iso
            vyos-${{ env.BUILD_VERSION }}-${{ env.BUILD_ARCH }}.azure.iso
            vyos-${{ env.BUILD_VERSION }}-${{ env.BUILD_ARCH }}.sha256
            vyos-${{ env.BUILD_VERSION }}-${{ env.BUILD_ARCH }}.nat64.iso
            vyos-${{ env.BUILD_VERSION }}-${{ env.BUILD_ARCH }}.nat64.xcpng.iso
            vyos-${{ env.BUILD_VERSION }}-${{ env.BUILD_ARCH }}.nat64.aws.iso
            vyos-${{ env.BUILD_VERSION }}-${{ env.BUILD_ARCH }}.nat64.azure.iso
